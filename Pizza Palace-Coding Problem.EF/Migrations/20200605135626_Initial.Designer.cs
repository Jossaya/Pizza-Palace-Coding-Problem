// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizza_Palace_Coding_Problem.EF;

namespace Pizza_Palace_Coding_Problem.EF.Migrations
{
    [DbContext(typeof(PizzaPalaceDbContext))]
    [Migration("20200605135626_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TaxTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<bool>("ItemIsATopping")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PizzaSizeId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PizzaSizeId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PizzaSizeId = 1,
                            Price = 12.0
                        },
                        new
                        {
                            Id = 2,
                            PizzaSizeId = 2,
                            Price = 14.0
                        },
                        new
                        {
                            Id = 3,
                            PizzaSizeId = 3,
                            Price = 16.0
                        });
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.PizzaSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PizzaSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Small"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Large"
                        });
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PizzaSizeId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ToppingCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaSizeId");

                    b.HasIndex("ToppingCategoryId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cheese",
                            PizzaSizeId = 1,
                            Price = 0.5,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cheese",
                            PizzaSizeId = 2,
                            Price = 0.75,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cheese",
                            PizzaSizeId = 3,
                            Price = 1.0,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pepperoni",
                            PizzaSizeId = 1,
                            Price = 0.5,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pepperoni",
                            PizzaSizeId = 2,
                            Price = 0.75,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pepperoni",
                            PizzaSizeId = 3,
                            Price = 1.0,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ham",
                            PizzaSizeId = 1,
                            Price = 0.5,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ham",
                            PizzaSizeId = 2,
                            Price = 0.75,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ham",
                            PizzaSizeId = 3,
                            Price = 1.0,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Pineapple",
                            PizzaSizeId = 1,
                            Price = 0.5,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Pineapple",
                            PizzaSizeId = 2,
                            Price = 0.75,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pineapple",
                            PizzaSizeId = 3,
                            Price = 1.0,
                            ToppingCategoryId = 1
                        },
                        new
                        {
                            Id = 13,
                            Name = "Sausage",
                            PizzaSizeId = 1,
                            Price = 2.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "Sausage",
                            PizzaSizeId = 2,
                            Price = 3.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "Sausage",
                            PizzaSizeId = 3,
                            Price = 4.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Feta Cheese",
                            PizzaSizeId = 1,
                            Price = 2.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 17,
                            Name = "Feta Cheese",
                            PizzaSizeId = 2,
                            Price = 3.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 18,
                            Name = "Feta Cheese",
                            PizzaSizeId = 3,
                            Price = 4.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Tomatoes",
                            PizzaSizeId = 1,
                            Price = 2.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 20,
                            Name = "Tomatoes",
                            PizzaSizeId = 2,
                            Price = 3.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 21,
                            Name = "Tomatoes",
                            PizzaSizeId = 3,
                            Price = 4.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Olives",
                            PizzaSizeId = 1,
                            Price = 2.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "Olives",
                            PizzaSizeId = 2,
                            Price = 3.0,
                            ToppingCategoryId = 2
                        },
                        new
                        {
                            Id = 24,
                            Name = "Olives",
                            PizzaSizeId = 3,
                            Price = 4.0,
                            ToppingCategoryId = 2
                        });
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.ToppingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToppingCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basic Toppings"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Deluxe Toppings"
                        });
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.OrderItem", b =>
                {
                    b.HasOne("Pizza_Palace_Coding_Problem.EF.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.Pizza", b =>
                {
                    b.HasOne("Pizza_Palace_Coding_Problem.EF.Entities.PizzaSize", "PizzaSize")
                        .WithMany()
                        .HasForeignKey("PizzaSizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pizza_Palace_Coding_Problem.EF.Entities.Topping", b =>
                {
                    b.HasOne("Pizza_Palace_Coding_Problem.EF.Entities.PizzaSize", "PizzaSize")
                        .WithMany()
                        .HasForeignKey("PizzaSizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pizza_Palace_Coding_Problem.EF.Entities.ToppingCategory", "ToppingCategory")
                        .WithMany()
                        .HasForeignKey("ToppingCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
